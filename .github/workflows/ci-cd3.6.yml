name: "exo3 workflow"

on: push

jobs:
  job1:
    runs-on: ubuntu-latest
    steps:
      - name: Set Variable
        run: echo "MY_VARIABLE=my_value" >> $GITHUB_ENV #this is workflow scoped

  job2:
    needs: job1
    runs-on: ubuntu-latest
    steps:
      - name: Use Variable
        run: echo "${{ env.MY_VARIABLE }}"

# env:
#   VAR_FROM_WF: "varuntouched"

# jobs:
#   CopScene:
#     runs-on: ubuntu-latest
#     # outputs:
#     #   output1: ${{ steps.testout.outputs.VAROUT }}
#     steps:
#       - id: testout
#         run: echo "VAROUT=CopScene" >> $GITHUB_ENV
      

#   CopVideo:
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo CopVideo
#   Detective:
#     needs: [CopScene, CopVideo]
#     runs-on: ubuntu-latest
#     steps:
#       # - env:
#       #     OUTPUT1: ${{needs.CopScene.outputs.output1}}
#       -  run: echo "Output from job1 ${{ env.VAROUT }}"
#   SWAT:
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo SWAT


# jobs:
#   job1:
#     runs-on: ubuntu-latest
#     # Map a step output to a job output
#     outputs:
#       output1: ${{ steps.step1.outputs.test }}
#       output2: ${{ steps.step2.outputs.test }}
#     steps:
#       - id: step1
#         run: echo "test=hello" >> "$GITHUB_OUTPUT"
#       - id: step2
#         run: echo "test=world" >> "$GITHUB_OUTPUT"
#   job2:
#     runs-on: ubuntu-latest
#     needs: job1
#     steps:
#       - env:
#           OUTPUT1: ${{needs.job1.outputs.output1}}
#           OUTPUT2: ${{needs.job1.outputs.output2}}
#         run: echo "$OUTPUT1 $OUTPUT2"